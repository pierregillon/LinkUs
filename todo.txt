* send data with fixed size buffer
* lock on queue for SocketConnection => "exit" on remote shell
* introduce concept for sending package with command or event.
* ILogger in ExternalAssemblyModule to do the Console Printing.
* Request frequently the basic information to keep information up to date.
* remove -Exception at the end of custom exception name
* retain -target in file to simplify command.
* admin mode for app, need to write to c:\
* The message size for uploading/downloading is huge because of UTF8 conversion. Find something to reduce the size (before compression)
* Send command without return result. (underlying sync call with byte result)
* upload with directory path as destination.
* Deserialization with typeof(TCommand) to replace with command.GetType() => let dev to serialize partial data .
* Rename file transfert event/command 
* dont use handler with return type, only void, and pass IBus systematically to interact with host process.
* when client not responding for a period of time during the Receive/Stream, free resource and throw exception.
* Ellapsed time for upload/download.
* use of the stream for shell command line handler.
* do not block all thread when downloading. send buffer after buffer. need ack from client.